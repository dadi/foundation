{>"partials/header" /}

{<bodyClass}body--dark{/bodyClass}

{<title}Organisations | Resources{/title}

{<head}
  <script src="https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.0/mapbox-gl.js"></script>
  <script src="https://unpkg.com/@mapbox/mapbox-sdk/umd/mapbox-sdk.min.js"></script>
  <link href="https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.0/mapbox-gl.css" rel="stylesheet" />
{/head}

{^params.org}

<div id="map"></div>

<script>
mapboxgl.accessToken = 'pk.eyJ1IjoiZGFkaWNvIiwiYSI6IlVaOVU3QmMifQ.dDoTL04V_WtMo2iQkfvZBg';

var data = {organisations.results|js|s};

var map = new mapboxgl.Map({
  container: 'map',
  style: 'mapbox://styles/dadico/cjf1cbtki001g2sqg66j4lszj',
  center: [0, 30],
  zoom: 1.4
});

var mapboxClient = mapboxSdk({ accessToken: mapboxgl.accessToken });

for (var i = 0; i < data.length; i++) { 
  plotOrg(data[i], map);
}

function plotOrg(org, map) {
  var link = '/research/orgs/'+org._id;

  mapboxClient
    .geocoding.forwardGeocode({
      query: org.basedIn,
      autocomplete: false,
      limit: 1
    })
    .send()
    .then(function(response) {
      var feature = response.body.features[0];

      var popup = new mapboxgl.Popup({ offset: 25 }).setHTML('<a href="'+link+'">'+org.title+'</a>');
         
      new mapboxgl.Marker()
        .setLngLat(feature.center)
        .setPopup(popup)
        .addTo(map);
    });
}
</script>

<main class="cnt">
  <div class="directory">
    {#organisationsGrouped}
      <dl class="directory__letter">
        <dt>{letter}</dt>
        {#orgs}
          <dd><a href="/research/orgs/{_id}">{title}</a></dd>
        {/orgs}
      </dl>
    {/organisationsGrouped}
  </div>
</main>

{:else}

  <main class="cnt">
    {#organisations.results}
      <div class="grid">
        <div class="col w-1-2">
          <h2>{title}</h2>
          <p><a href="{url}">{url}</a></p>
          <p><a href="mailto:{contact}">{contact}</a></p>
        </div>
        <div class="col w-1-2">
          <div class="grid">
            <div class="col w-1-2">Based in</div>
            <div class="col w-1-2">{basedIn}</div>
          </div>
          <div class="grid">
            <div class="col w-1-2">Acting in</div>
            <div class="col w-1-2">{actingIn}</div>
          </div>
          <div class="grid">
            <div class="col w-1-2">Focus</div>
            <div class="col w-1-2">{focus.title}</div>
          </div>
        </div>
      </div>
    {/organisations.results}
  </main>

{/params.org}

 
</body>
</html>